{"version":3,"sources":["components/header/SearchField.js","services/GetData.js","components/header/SearchSuggest.js","containers/SearchSuggest.js","containers/Search.js","components/header/Logo.js","containers/Header.js","pages/Intro.js","components/BoxItems.js","containers/SearchResult.js","containers/SearchResultNone.js","containers/Detail.js","pages/Main.js","components/Footer.js","pages/App.js","serviceWorker.js","index.js"],"names":["SearchField","props","className","type","placeholder","value","query","onChange","onFocus","onBlur","onClick","inputClear","GetSearch","keyword","console","log","axios","get","GetInsta","SuggestList","name","SuggestBox","blind","onMouseEnter","onMouse","onMouseLeave","suggestList","SearchSuggest","fetchSearch","a","setState","fetching","sgtListRequest","area_list","data","state","this","map","list","i","key","e","autoComp","Component","Search","returnSearch","preventDefault","inputFocus","target","firstChild","childNodes","lastChild","history","push","suggestHandle","suggestHover","suggestHoverListen","onClickSgt","newProps","onSubmit","method","autoComplete","withRouter","Logo","href","Header","Intro","BoxItem","style","backgroundImage","searchList","rank","instatCount","desc","InstaBoxItem","link","tags","Loading","SearchResult","searchRequest","searchCount","length","hasError","nextPage","document","documentElement","scrollHeight","scrollTop","clientHeight","loadPage","viewDetail","match","params","itemsPerPage","indexStart","window","addEventListener","prevProps","prevState","to","indexEnd","boxItems","slice","nextProps","SearchResultNone","Detail","detailInfo","Promise","all","detailRequest","instaList","instaBoxItems","Main","exact","path","render","component","Footer","App","queryHandle","queryClearHandle","Boolean","location","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.888a27d5.chunk.js","sourcesContent":["import React from 'react';\nimport './header.css';\n\nfunction SearchField(props) {\n  return (\n    <fieldset>\n      <legend className=\"blind\">검색</legend>\n      <div className=\"search_sharp\">\n        <span>#</span>\n      </div>\n      <span className=\"search_outline\">\n        <input\n          type=\"text\"\n          className=\"key_color search_input\"\n          placeholder=\"강남역\"\n          value={props.query}\n          onChange={props.onChange}\n          onFocus={props.onFocus}\n          onBlur={props.onFocus}\n        />\n      </span>\n      <button\n        type=\"button\"\n        className=\"search_clear_btn\"\n        onClick={props.inputClear}\n      >\n        <span className=\"blind\">지우기</span>\n        <span className=\"search_clear_btn_ico\"></span>\n      </button>\n      <div className=\"search_fixed_text\">\n        <span>맛집 |</span>\n      </div>\n      <button type=\"submit\" className=\"search_btn\" onClick={props.onClick}>\n        <span className=\"blind\">검색</span>\n        <span className=\"search_btn_ico\"></span>\n      </button>\n    </fieldset>\n  );\n}\n\nexport default SearchField;\n","import axios from 'axios';\nexport function GetSearch(keyword) {\n    console.log('http://0.0.0.0:5000/areas/' + keyword);\n    return axios.get('http://0.0.0.0:5000/areas/' + keyword);}\n\nexport function GetSuggestList(keyword) {\n    console.log('http://0.0.0.0:5000/areas');\n    return axios.get('http://0.0.0.0:5000/areas');}\n\nexport function GetDetail(keyword) {\n    console.log('https://my-json-server.typicode.com/dudusae/demo/' + keyword);\n    return axios.get('https://my-json-server.typicode.com/dudusae/demo/' + keyword);}\n    \nexport function GetInsta(keyword) {\n    console.log('https://my-json-server.typicode.com/dudusae/demo/' + keyword);\n    return axios.get('https://my-json-server.typicode.com/dudusae/demo/' + keyword);}\n        ","import React from 'react';\nimport './header.css';\n\n// 자동완성 키워드 목록 (낱개)\nfunction SuggestList(props) {\n  return (\n      <li className=\"search_keyword_item\" onClick={props.onClick}>{props.name}</li>\n  );\n}\n\nfunction SuggestBox(props) {\n  return (\n    <div\n    className={'search_keyword_suggest' + props.blind}\n    onMouseEnter={props.onMouse}\n    onMouseLeave={props.onMouse}\n  >\n    <ul className=\"search_keyword_suggest_ul\">\n      <span className=\"search_keyword_subtitle key_font\">추천지역</span>\n      <div className=\"search_keyword_list key_color_hv  key_font\">{props.suggestList}</div>\n    </ul>\n  </div>\n  );\n}\n\nexport { SuggestList, SuggestBox };\n","import React, { Component } from 'react';\nimport { GetSuggestList } from './../services/GetData';\nimport { SuggestList, SuggestBox } from './../components/header/SearchSuggest';\n\nclass SearchSuggest extends Component {\n  fetchSearch = async () => {\n    this.setState({ fetching: true });\n    const sgtListRequest = await GetSuggestList();\n    const suggestList = sgtListRequest.area_list.data;\n    console.log(suggestList);\n    this.setState({\n      suggestList,\n      fetching: false,\n    });\n  };\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      fetching: false,\n      suggestList: [],\n    };\n  }\n\n  componentDidMount() {\n    this.fetchSearch();\n  }\n\n  render() {\n    var suggestList = this.state.suggestList.map((list, i) => {\n      return (\n        <SuggestList\n          name={list.name}\n          key={i}\n          onClick={e => {\n            this.props.autoComp(e, list.name);\n          }}\n        />\n      );\n    });\n    return (\n      <SuggestBox\n        blind={this.props.blind}\n        onMouse={this.props.onMouse}\n        suggestList={suggestList}\n      />\n    );\n  }\n}\n\nexport { SuggestList, SearchSuggest };\n","import React, { Component } from 'react';\nimport SearchField from './../components/header/SearchField';\nimport { SearchSuggest } from './SearchSuggest';\nimport { withRouter } from 'react-router-dom';\n\nclass Search extends Component {\n  // 검색창이 숨김처리 되었을 때 코드를 로드하지 않음\n  shouldComponentUpdate(newProps) {\n    if (newProps.blind !== 'blind') {\n      return true;\n    }\n    return false;\n  }\n\n  constructor(props) {\n    super(props);\n    this.suggestHover = false;\n    this.state = {\n      inputFocus: false\n    };\n  }\n\n  // 검색실행시 검색창에 입력된 값을 url주소로 표시한다\n  returnSearch = e => {\n    e.preventDefault();\n    this.setState({ inputFocus: false });\n    var keyword = e.target.firstChild.childNodes[2].lastChild.value;\n    this.props.history.push(`/search/${keyword}`);\n  };\n\n  // input FocusOn일때 자동완성 키워드 목록 보이기\n  suggestHandle = e => {\n    if (this.suggestHover === false) {\n      this.setState({ inputFocus: e.type === 'focus' ? true : false });\n    }\n  };\n  // 자동완성 클릭했을 때 자동완성 박스가 사라지지 않는 문제 해결\n  suggestHoverListen = e => {\n    this.suggestHover = e.type === 'mouseenter' ? true : false;\n  };\n\n  // 자동완성 키워드 클릭시 검색창 값 채우고 검색실행\n  autoComp = (e, keyword) => {\n    e.preventDefault();\n    this.setState({ inputFocus: false });\n    this.props.history.push(`/search/${keyword}`);\n    this.props.onClickSgt(keyword);\n  };\n\n  render() {\n    var { blind, query, onChange, inputClear } = this.props;\n\n    return (\n      <div className={'search '+blind}>\n        <form\n          onSubmit={this.returnSearch}\n          method=\"get\"\n          autoComplete=\"off\"\n        >\n          <SearchField\n            query={query}\n            onChange={onChange}\n            inputClear={inputClear}\n            onFocus={this.suggestHandle}\n          />\n          <SearchSuggest\n            blind={this.state.inputFocus ? '' : ' blind'}\n            autoComp={this.autoComp}\n            onMouse={this.suggestHoverListen}\n          />\n        </form>\n      </div>\n    );\n  }\n}\nexport default withRouter(Search);\n","import React from 'react';\nimport './header.css';\n\nfunction Logo(props) {\n  return (\n    <div className='logo_area'>\n          <h1>\n            <a href=\"/\">\n              <span className=\"logo\">핫플<span className=\"mb_blind\">검색</span></span>\n            </a>\n          </h1>\n        </div>\n  );\n}\n\nexport default Logo;\n","import React from 'react';\nimport Search from './Search';\nimport Logo from './../components/header/Logo';\n\nfunction Header(props) {\n  return (\n    <div className=\"header_container fullwidth key_color_bg\">\n      <header className=\"header\">\n        <Logo/>\n        <Search\n          blind={props.blind}\n          query={props.query}\n          onChange={props.onChange}\n          inputClear={props.inputClear}\n          onClickSgt={props.onClickSgt}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default Header;\n","import React, { Component } from 'react';\nimport Header from './../containers/Header';\nimport Search from './../containers/Search';\n\nclass Intro extends Component {\n  render() {\n    var { query, onChange, inputClear, onClickSgt } = this.props;\n    return (\n      <div className=\"intro\">\n        <Header blind=\"blind\" />\n        <div className=\"main_container fullwidth key_font\">\n          <main className=\"main\">\n            <h1 className=\"main_copy\">\n              지금 인스타그램에서{' '}\n              <span className=\"mb_view\">\n                <br />\n              </span>\n              <span className=\"key_color\">핫한</span> 맛집은?\n            </h1>\n            <Search\n              query={query}\n              onChange={onChange}\n              inputClear={inputClear}\n              onClickSgt={onClickSgt}\n            />\n            <div className=\"home_ico\"></div>\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Intro;\n","import React from 'react';\nimport LinesEllipsis from 'react-lines-ellipsis';\n\n// 검색결과 박스 (낱개)\nfunction BoxItem(props) {\n  return (\n    <li className=\"box_item\">\n      <a href=\"http://#\" onClick={props.onClick}>\n        <div\n          className=\"box_img\"\n          style={{ backgroundImage: `url(${props.searchList.backgroundImage})` }}\n        >\n          <div className=\"box_img_overlay\"></div>\n          <div className=\"box_rank key_color_bg\">\n            <span className=\"box_rank_num\">{props.searchList.rank}등</span>\n          </div>\n          <div className=\"box_insta_count\">\n            <p className=\"box_insta_count_txt\">{props.searchList.instatCount}</p>\n          </div>\n        </div>\n        <div className=\"box_txt\">\n          <h2 className=\"box_title\">{props.searchList.name}</h2>\n          <p className=\"box_desc\">{props.searchList.desc}</p>\n        </div>\n      </a>\n    </li>\n  );\n}\n\nfunction RelatedBoxItem(props) {\n  return (\n    <li className=\"related_box_item\">\n      <a href=\"/#\" onClick={props.onClick}>\n        <div\n          className=\"related_box_img\"\n          style={{ backgroundImage: `url(${props.backgroundImage})` }}\n        >\n          <div className=\"related_box_rank\">\n            <span className=\"related_box_rank_num\">{props.rank}</span>\n          </div>\n        </div>\n        <div className=\"related_box_txt\">\n          <h3 className=\"related_box_title key_color\"><LinesEllipsis text={props.name} maxLine='1' ellipsis='...' trimRight basedOn='letters' /></h3>\n        </div>\n      </a>\n    </li>\n  );\n}\n\nfunction InstaBoxItem(props) {\n  return (\n    <li className=\"box_item insta_box_item\">\n      <a href={props.link}>\n        <div\n          className=\"insta_box_img\"\n          style={{ backgroundImage: `url(${props.backgroundImage})` }}\n        ></div>\n        <div className=\"insta_box_txt\">\n          <p className=\"insta_box_tags\">{props.tags}</p>\n        </div>\n      </a>\n    </li>\n  );\n}\n\nfunction Loading(props) {\n  return (\n    <div className={'loading '+props.blind} onClick={props.onClick}>\n      <span className=\"loading_ico\" />\n      <br />\n      <span>다음 페이지를 불러오고 있습니다.</span>\n    </div>\n  );\n}\n\nexport { BoxItem, Loading, RelatedBoxItem, InstaBoxItem };\n","import React, { Component } from 'react';\nimport { withRouter, Redirect } from 'react-router-dom';\nimport { BoxItem, Loading } from './../components/BoxItems';\nimport { GetSearch } from './../services/GetData';\n\nclass SearchResult extends Component {\n  // 키워드 검색결과 가져와서 state에 담기\n  fetchSearch = async keyword => {\n    this.setState({ fetching: true });\n    try {\n      const searchRequest = await GetSearch(keyword);\n      const searchList = searchRequest.data;\n      this.setState({\n        searchCount: searchList.length,\n        searchList,\n        fetching: false,\n      });\n    } catch (e) {\n      this.setState({\n        fetching: false,\n        hasError: true,\n      });\n    } finally {\n      this.setState({ hasError: false });\n    }\n  };\n  constructor(props) {\n    super(props);\n    this.state = {\n      fetching: false,\n      hasError: false,\n      searchCount: null,\n      searchList: [],\n      itemsPerPage: 12,\n      loadPage: 1,\n      indexStart: 0,\n      keyword: this.props.keyword,\n    };\n  }\n\n  // render()다음 데이터를 호출한다\n  componentDidMount() {\n    this.fetchSearch(this.props.match.params.query);\n    window.addEventListener('scroll', this.nextPage);\n  }\n\n  // 업데이트 될 때 실행됨\n  static getDerivedStateFromProps(nextProps, prevState) {\n    if (nextProps.keyword !== prevState.keyword) {\n      return { keyword: nextProps.keyword };\n    }\n    return null;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.match.params.query !== this.props.match.params.query) {\n      this.fetchSearch(this.props.keyword);\n    }\n  }\n\n  // 무한스크롤\n  nextPage = () => {\n    var { scrollHeight, scrollTop, clientHeight } = document.documentElement;\n    if (scrollHeight === scrollTop + clientHeight) {\n      this.setState({ loadPage: this.state.loadPage + 1 });\n    }\n  };\n\n  // 상세보기로 이동\n  viewDetail = (e, name) => {\n    e.preventDefault();\n    this.props.history.push(`/search/${this.props.match.params.query}/${name}`);\n  };\n\n  render() {\n    var {\n      fetching,\n      hasError,\n      searchCount,\n      searchList,\n      itemsPerPage,\n      loadPage,\n      indexStart,\n    } = this.state;\n\n    // 검색결과가 없으면 /sorry 페이지로 이동\n    if (hasError) {\n      return <Redirect to=\"/sorry\" />;\n    } else {\n      // 검색결과가 있으면 로드한 데이터를 12개씩 보여준다\n      var indexEnd = itemsPerPage * loadPage;\n      var searchListSlice = searchList.slice(indexStart, indexEnd);\n\n      // 데이터를 불러와 카드레이아웃으로 보여준다\n      var boxItems = searchListSlice.map((searchList, i) => {\n        return (\n          <BoxItem\n            searchList={searchList}\n            key={i}\n            onClick={e => {\n              this.viewDetail(e, searchList.name);\n            }}\n          />\n        );\n      });\n\n      return (\n        <div className=\"main_container fullwidth\">\n          <main className=\"main search_result\">\n            <p className=\"search_count\">검색결과 : {searchCount} 건</p>\n            <ul className=\"box_container\">{boxItems}</ul>\n            {/* ajax로 데이터를 가져오는 동안 Loading을 보여준다 */}\n            <Loading blind={fetching ? '' : 'blind'} />\n          </main>\n        </div>\n      );\n    }\n  }\n}\n\nexport default withRouter(SearchResult);\n","import React, { Component } from 'react';\nimport { SearchSuggest } from './SearchSuggest';\nimport { withRouter } from 'react-router-dom';\n\nclass SearchResultNone extends Component {\n  autoComp = (e, keyword) => {\n    e.preventDefault();\n    this.props.history.push(`/search/${keyword}`);\n    this.props.onClickSgt(keyword);\n  };\n\n  render() {\n    return (\n      <div className=\"main_container fullwidth\">\n        <main className=\"main search_result\">\n          <div className=\"search_no_msg\">\n            <span className=\"sch_no_ico\"></span>\n            <span className=\"main_copy\">\n              지금은 서울만 가능해요\n              <br />\n              이런 키워드는 어떠세요?\n            </span>\n            <SearchSuggest\n            autoComp={this.autoComp}\n          />\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default withRouter(SearchResultNone);\n","import React, { Component } from 'react';\nimport { Loading, InstaBoxItem } from './../components/BoxItems';\nimport { GetDetail, GetSearch, GetInsta } from './../services/GetData';\n\nclass Detail extends Component {\n  fetchSearch = async (query, name) => {\n    console.log(this.state.detailInfo);\n    this.setState({ fetching: true });\n      const detailRequest = await Promise.all([\n        GetDetail(name),\n        GetInsta(query),\n        GetSearch(query)\n      ]);\n      const detailInfo = detailRequest[0].data;\n      const instaList = detailRequest[1].data;\n      // const searchList = detailRequest[2].data;\n\n      this.setState({\n        detailInfo: detailInfo[0],\n        // searchList,\n        instaList,\n        fetching: false,\n      });\n      console.log(this.state.detailInfo);\n    }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      fetching: false,\n      name: this.props.name,\n      detailInfo: [],\n      // searchList: [],\n      instaList: [],\n    };\n  }\n\n  // render()다음 데이터를 호출한다\n  componentDidMount() {\n    console.log('이거;'+this.props.match.params.name)\n    console.log('이거;'+this.props.match.params.query)\n    const {query, name} = this.props.match.params;\n    this.fetchSearch(query, name);\n    // window.addEventListener('scroll', this.nextPage);\n  }\n\n  // // 무한스크롤\n  // nextPage = () => {\n  //   var { scrollHeight, scrollTop, clientHeight } = document.documentElement;\n  //   if (scrollHeight === scrollTop + clientHeight) {\n  //     this.setState({ loadPage: this.state.loadPage + 1 });\n  //   }\n  // };\n\n\n\n  render() {\n\n    // 검색결과가 있으면 로드한 데이터를 12개씩 보여준다\n\n    var {detailInfo, fetching} = this.state;\n    // var relatedBoxItems = this.state.searchList.map((searchList, i) => {\n    //   return (\n    //     <RelatedBoxItem\n    //       rank={searchList.rank}\n    //       name={searchList.name}\n    //       backgroundImage={searchList.backgroundImage}\n    //       key={i}\n    //       onClick={this.props.onClick}\n    //     />\n    //   );\n    // });\n\n    var instaBoxItems = this.state.instaList.map((instaList, i) => {\n      return (\n        <InstaBoxItem\n          backgroundImage={instaList.backgroundImage}\n          tags={instaList.desc}\n          key={i}\n          // link={instaList.link}\n        />\n      );\n    });\n\n    return (\n      <div className=\"main_container fullwidth\">\n        <main className=\"main\">\n          {/* <div className=\"related_box_container\">\n            <button className=\"related_prv\">\n              <span className=\"blind\">이전</span>\n            </button>\n            <div className=\"related_box_list_wrap\">\n              <ul className=\"related_box_list\">{relatedBoxItems}</ul>\n            </div>\n            <button className=\"related_nxt\">\n              <span className=\"blind\">다음</span>\n            </button>\n          </div> */}\n          <h1 className=\"detail_title\">{detailInfo.name}</h1>\n          <div className=\"deatil\">\n            <div className=\"detail_map\"></div>\n            <div className=\"detail_desc\">\n              <p className=\"detail_txt\">\n              {detailInfo.desc}\n              </p>\n              <a className=\"detail_map_link key_color\" href=\"/#\">\n                <p className=\"detail_txt map_ico\">네이버 지도에서 보기</p>\n              </a>\n            </div>\n          </div>\n          <h2 className=\"insta_count\">인스타그램 검색결과 : {this.state.instaList.length}건</h2>\n          <ul className=\"box_container\">{instaBoxItems}</ul>\n          <Loading blind={fetching ? '' : 'blind'} />\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default Detail;\n","import React from 'react';\nimport Header from './../containers/Header';\nimport SearchResult from './../containers/SearchResult';\nimport SearchResultNone from './../containers/SearchResultNone';\nimport Detail from './../containers/Detail';\nimport { Route, BrowserRouter as Router} from 'react-router-dom';\n\nfunction Main(props) {\n  return (\n    <Router>\n      <Header\n        query={props.query}\n        onChange={props.onChange}\n        inputClear={props.inputClear}\n        onClickSgt={props.onClickSgt}\n      />\n      <Route exact path=\"/search/:query\" render={() => (\n                                          <SearchResult\n                                              keyword={props.query}/>\n        )}\n      />\n      <Route exact path=\"/sorry\" render={() => (\n                                          <SearchResultNone\n                                              query={props.query}\n                                              onChange={props.onChange}\n                                              inputClear={props.inputClear}\n                                              onClickSgt={props.onClickSgt}/>)} />\n      <Route exact path=\"/search/:query/:name\" component={Detail} />\n    </Router>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer() {\n  return (\n    <footer>\n      <div className=\"footer\">\n        <a href=\"https://github.com/maykim51/scc-hotplace\">\n          <span>https://github.com/maykim51/scc-hotplace</span>\n        </a>\n      </div>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { Component } from 'react';\nimport Intro from './Intro';\nimport Main from './Main';\nimport Footer from './../components/Footer';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: ''\n    };\n  }\n\n  // 검색창에 입력한 값을 표시\n  queryHandle = e => {this.setState({ query: e.target.value });};\n\n  // 검색창에 입력한 값 지우기\n  queryClearHandle = () => {this.setState({ query: '' });};\n\n  // 키워드 자동완성 \n  onClickSgt = keyword => {this.setState({ query: keyword });};\n\n  render() {\n    return (\n      <div className=\"fullheight\">\n        <Router>\n          <Route exact path=\"/\" render={() => (\n                                        <Intro\n                                          query={this.state.query}\n                                          onChange={this.queryHandle}\n                                          inputClear={this.queryClearHandle}\n                                          onClickSgt={this.onClickSgt}\n                                        />\n            )}\n          />\n          <Route path=\"/search/\" render={() => (\n                                        <Main\n                                          query={this.state.query}\n                                          onChange={this.queryHandle}\n                                          inputClear={this.queryClearHandle}\n                                          onClickSgt={this.onClickSgt}\n                                        />\n            )}\n          />\n        </Router>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './pages/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}